Adam is handling a good portion of the php services. Chaz took a web class a few years back that can provide insight on the front end and user interaction. Everyone is taking lead on the model (DB) and Adam is doing the majority of the controller (PHP), but Friday consist of walk throughs of any new changes that group members are unaware of as well as presenting work that others did not contribute to. As noted the design represents a mvc (model view controller) design pattern. Our group meets every Friday from 1-4 typically in the same room class is taught. We use the projection monitor so everyone can view one screen. Typically in our Friday discussion/code sesh we go over features/complications and how we will implement them. We generally have someone live coding why others research implementations as well as discuss any confusion any one has through the process. The first part of the assignment consisted of chaz and cody searching for html examples and instructions for setting up interface. This process was rather straight forward and we had a web interface up within a few hours. 

Regarding design features, originally we wanted to include a shell built into web page, but found time was an issue, because of everyones busy schedule. Adam brought up the stop, start and restart features. We all thought that was a good starting point. We even discussed a double check authentication/security process such as reference checking ip addresses and credential login checks through sql database. The ip security protocol we were thinking of implementing ended up not being a viable solution since they can change through different subnets. We also discussed using php encryption service using m5 but found it had a reputable history of breaches, we ended up using SSL, which was rather straight forward. Everyone also installed a Database (Sql) on each instances, as well as setting up our certificates. Puppet master would of been the ideal choice, but delegating work and seeing it for ourselves was also on the list. We all walked through it together.The puppet master has this installed as well incase any issue happen on any of the instances. 

Security:

In the html folder there is a folder called button which is a php file that runs like a c file. The command consists of what your doing to the instance, which instance and then the region. This is all through the command interface to see the cli. This file is only readable and writable under root. This is to protect our instances so the web user canâ€™t see the commands, nor allow them to execute it themselves. The file php-shell is the only file thats allowed to send it commands to execute. This file is owned by root as well. The only privileges are read and execute. Its treated as the delegate for the web user. The web user can not view this file as well. The only way to execute commands in the php file is by having root privileges hence the need to make php-shell owned by root only. The file rapper and wrapper is owned by root, but anyone can read, write and execute. This is done by setting the user id to 0, which makes them the root. Then it calls the php-shell file. This file is viewable by anyone that as the login credentials. As far as data being transmitted through the network we are using a self signed ssl certificate, which handles the encryption for us. The reason we are using php is because its hidden under the hood. For example we have a server side and a client side. At run time the php files are compiled on the server side, not allowing the user to see whats going on. Then the client makes a request and and the php sends a response. This setup is nice because, the web user can not download the php files because they are not accessible.   


